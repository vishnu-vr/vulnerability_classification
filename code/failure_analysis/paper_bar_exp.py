'''
GENERATING DATA FOR INTERSECTION BAR GRAPHS IN PAPER
'''

import pandas as pd

def print_dic(dic):
	print()
	for key,value in dic.items():
		print(str(key)+' : '+str(value))

def sort_dic(dic):
	'''sorts the dic according to values in the reverse order'''

	return {k: v for k, v in sorted(dic.items(), key=lambda item: item[1],reverse=1)}
	

best_path = input("best_path : ").strip()

best_model = pd.read_csv(best_path)

comparing_path = input("comparing_path : ").strip()

com_model = pd.read_csv(comparing_path)

intersection_path = '/'.join(comparing_path.split('/')[:-1])+"/intersection_with_best/"+comparing_path.split('/')[-1]
intersection_path = intersection_path.strip()

intersection_csv = pd.read_csv(intersection_path)

'''finding best model class counts'''
b_count={}
for ele in best_model["predicted_classes"]:
	if ele not in b_count:
		b_count[ele] = 1
	else:
		b_count[ele] += 1

'''finding the counts of misclassification by both the models to same target class'''
inter_m_count={}

pred_by_m=intersection_csv["class_pred_by_model"]
pred_by_b=intersection_csv["class_pred_by_best"]

common_class_count={}
for ele in range(len(pred_by_b)):
	if pred_by_b[ele] == pred_by_m[ele]:
		if pred_by_b[ele] not in common_class_count:
			common_class_count[pred_by_b[ele]] = 1
		else:
			common_class_count[pred_by_b[ele]] += 1


print() 
print("total number of misclassified samples by the best model : ",sum(b_count.values()))

print("top 3 class and bottom 1 class : ",end='');print_dic(sort_dic(b_count))
print("=====================================================")
print()
print("total number of misclassified samples by the model being compared : ",len(com_model["predicted_classes"]))
print()
print("the number of sample of intersection between best and compared model : ",len(intersection_csv))
print("=====================================================")
print()
print("misclassified samples by both the models to same target class : ",end='');print_dic(common_class_count);
print("=====================================================")




















